<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Usage on Reacli</title>
    <link>https://reacli.github.io/usage/</link>
    <description>Recent content in Usage on Reacli</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-FR</language>
    <lastBuildDate>Mon, 18 Feb 2019 19:42:22 +0100</lastBuildDate>
    
	<atom:link href="https://reacli.github.io/usage/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Use Reacli</title>
      <link>https://reacli.github.io/usage/usage/</link>
      <pubDate>Mon, 18 Feb 2019 19:57:39 +0100</pubDate>
      
      <guid>https://reacli.github.io/usage/usage/</guid>
      <description> If Reacli is installed globally Once you have Reacli globally installed (see installation), you can directly use it like this:
reacli component path/to/my/component  If you did not install Reacli You don&amp;rsquo;t need to have Reacli installed globally to use it. You can use npx to run it wherever you want:
npx reacli component path/to/my/component  </description>
    </item>
    
    <item>
      <title>Component architecture</title>
      <link>https://reacli.github.io/usage/architecture/</link>
      <pubDate>Mon, 18 Feb 2019 19:57:39 +0100</pubDate>
      
      <guid>https://reacli.github.io/usage/architecture/</guid>
      <description>Architecture Creating a component with no option (reacli component ./my-super-component) will generate the following architecture:
. └── my-super-component ├── components | ├── MySuperComponent.jsx | ├── MySuperComponent.css | └── MySuperComponentContainer.jsx └── index.js  Let&amp;rsquo;s describe it a bit.
index.js We created an index.js at the root of the component folder because we believe that whatever implementation it uses, other projects or components using it should not know, or mind the internal implementation.</description>
    </item>
    
  </channel>
</rss>